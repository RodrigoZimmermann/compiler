public interface ParserConstants
{
    int START_SYMBOL = 35;

    int FIRST_NON_TERMINAL    = 35;
    int FIRST_SEMANTIC_ACTION = 62;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1,  0, -1,  0, -1, -1, -1,  0, -1, -1,  0, -1,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1,  1, -1, -1,  1, -1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        {  3, -1, -1, -1, -1,  2, -1,  2,  3,  3, -1,  2, -1, -1,  2, -1,  2,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  4, -1,  8, -1, -1, -1,  7, -1, -1,  5, -1,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 23, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, 19, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 15, 15, 15, 15, 15, -1, -1, -1, -1, 15, -1, 15, -1, -1, 15, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 15, 15, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 27, 27, 27, 27, 27, -1, -1, -1, -1, 27, -1, 27, -1, -1, 27, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, 27, 27, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 28, 28, -1, 28, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 31, 31, 31, 31, 31, -1, -1, -1, -1, 33, -1, 34, -1, -1, 32, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, 31, 31, -1, -1 },
        { -1, 35, 35, 35, 35, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, 35, 35, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, 36, 36, -1, 36, -1, 36, 37, 37, 37, 37, 37, 37, -1, -1, -1, -1 },
        { -1, 44, 44, 44, 44, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, 45, 45, -1, 45, -1, 45, 45, 45, 45, 45, 45, 45, 46, 47, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 39, 40, 41, 42, 43, -1, -1, -1, -1 },
        { -1, 48, 48, 48, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, 49, 49, -1, 49, -1, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 51 },
        { -1, 53, 54, 55, 56, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, 58, 59, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 77, 83, 36, 78 },
        { 38, 20, 37 },
        { 36 },
        {  0 },
        { 39 },
        { 41 },
        { 42 },
        { 43 },
        { 45 },
        { 47, 21, 51, 40 },
        { 86 },
        { 87, 22, 12, 51, 88 },
        { 15, 23, 47, 89, 24 },
        { 17, 23, 49, 24 },
        { 18, 23, 49, 24, 79 },
        { 51, 76, 50 },
        {  0 },
        { 19, 49 },
        {  6, 84, 48 },
        {  0 },
        { 19, 47 },
        { 12, 23, 51, 24, 90, 36, 44 },
        { 10, 91 },
        { 92,  9, 36, 10, 91 },
        {  8, 93, 23, 51, 24, 22, 12, 46, 94 },
        { 16, 36, 10, 95 },
        { 11, 36, 10, 95 },
        { 53, 52 },
        {  0 },
        {  7, 53, 80, 52 },
        { 14, 53, 81, 52 },
        { 54 },
        { 16, 73 },
        { 11, 74 },
        { 13, 53, 75 },
        { 56, 55 },
        {  0 },
        { 58, 71, 56, 72 },
        { 25 },
        { 26 },
        { 27 },
        { 28 },
        { 29 },
        { 30 },
        { 59, 57 },
        {  0 },
        { 31, 59, 63, 57 },
        { 32, 59, 64, 57 },
        { 61, 60 },
        {  0 },
        { 33, 61, 65, 60 },
        { 34, 61, 66, 60 },
        {  6, 85 },
        {  2, 67 },
        {  3, 68 },
        {  4 },
        {  5, 82 },
        { 23, 51, 24 },
        { 31, 61 },
        { 32, 61, 70 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Esperado EOF",//"Esperado fim de programa",
        "Esperado constante_int",
        "Esperado constante_float",
        "Esperado constante_bin",
        "Esperado constante_string",
        "Esperado id",
        "Esperado and",//"Esperado pr_and",
        "Esperado check",//"Esperado pr_check",
        "Esperado else",//"Esperado pr_else",
        "Esperado end",//"Esperado pr_end",
        "Esperado false",//"Esperado pr_false",
        "Esperado if",//"Esperado pr_if",
        "Esperado not",//"Esperado pr_not",
        "Esperado or",//"Esperado pr_or",
        "Esperado read",//"Esperado pr_read",
        "Esperado true",//"Esperado pr_true",
        "Esperado write",//"Esperado pr_write",
        "Esperado writeln",//"Esperado pr_wirteln",
        "Esperado \",\"",
        "Esperado \";\"",
        "Esperado \"=\"",
        "Esperado \":\"",
        "Esperado \"(\"",
        "Esperado \")\"",
        "Esperado \"==\"",
        "Esperado \"!=\"",
        "Esperado \"<\"",
        "Esperado \"<=\"",
        "Esperado \">\"",
        "Esperado \">=\"",
        "Esperado \"+\"",
        "Esperado \"-\"",
        "Esperado \"*\"",
        "Esperado \"/\"",
        "Esperado id check if read write writeln",//"<programa> inv�lido",
        "Esperado id check if read write writeln",//"<lista_comandos> inv�lido",
        "Esperado EOF id check else end if read write writeln",//"<lista_comandos_> inv�lido",
        "Esperado id check if read write writeln",//"<comando> inv�lido",
        "Esperado id",//"<atribuicao> inv�lido",
        "Esperado ; :",//"<atribuicao_> inv�lido",
        "Esperado read",//"<entrada_dados> inv�lido",
        "Esperado write writeln",//"<saida_dados> inv�lido",
        "Esperado if",//"<selecao> inv�lido",
        "Esperado else end",//"<selecao_> inv�lido",
        "Esperado check",//"<repeticao> inv�lido",
        "Esperado false true",//"<repeticao_> inv�lido",
        "Esperado id",//"<lista_identificadores> inv�lido",
        "Esperado , = )",//"<lista_identificadores_> inv�lido",
        "Esperado expressão",//"<lista_expressoes> inv�lido", 
        "Esperado , )",//"<lista_expressoes_> inv�lido",
        "Esperado expressão",//"<expressao> inv�lido",
        "Esperado expressão",//"<expressao_> inv�lido",
        "Esperado expressão",//"<elemento> inv�lido",
        "Esperado expressão",//"<relacional> inv�lido",
        "Esperado expressão",//"<relacional_> inv�lido",
        "Esperado expressão",//"<aritmetica> inv�lido",
        "Esperado expressão",//"<aritmetica_> inv�lido",
        "Esperado == != < <= > >=",//"<operador_relacional> inv�lido",
        "Esperado expressão",//"<termo> inv�lido",
        "Esperado expressão",//"<termo_> inv�lido",
        "Esperado expressão",//"<fator> inv�lido"
    };
}
